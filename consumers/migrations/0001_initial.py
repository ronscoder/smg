# Generated by Django 5.2.3 on 2025-07-03 22:50

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('consumer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('contact_nos', models.CharField(blank=True, max_length=30, null=True)),
                ('meter_no', models.CharField(blank=True, max_length=20, null=True)),
                ('connection_id', models.CharField(blank=True, max_length=20, null=True)),
                ('phase', models.CharField(max_length=10)),
                ('latlong', models.CharField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('remark', models.CharField(max_length=500)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consumers.consumer')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='UnauthConsumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contact_nos', models.CharField(blank=True, max_length=30, null=True)),
                ('remark', models.CharField(blank=True, max_length=100, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Raid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('observation', models.CharField(blank=True, max_length=200, null=True)),
                ('theft', models.BooleanField(default=False)),
                ('info', models.CharField(blank=True, max_length=200, null=True)),
                ('theft_duration_months', models.FloatField(blank=True, null=True, verbose_name='Theft duration in months')),
                ('penalty_amount', models.FloatField(blank=True, null=True)),
                ('action', models.CharField(blank=True, max_length=200, null=True)),
                ('amount_paid', models.FloatField(blank=True, null=True)),
                ('pay_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('is_disconnected', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('skip', models.BooleanField(default=False)),
                ('consumer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consumers.consumer')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('unauth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consumers.unauthconsumer')),
            ],
        ),
    ]
